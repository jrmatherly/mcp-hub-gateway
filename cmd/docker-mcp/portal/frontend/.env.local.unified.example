# =================================================================
# MCP Portal Unified Environment Configuration
# =================================================================
# This file configures BOTH frontend and backend services
# Copy to .env.local and update with your values
#
# Frontend: Reads all variables directly
# Backend: Reads via wrapper script or Docker Compose
# =================================================================

# ========================================
# SHARED CONFIGURATION (Used by both services)
# ========================================

# ----------------------------------------
# Azure AD Configuration
# ----------------------------------------
# Required for authentication - keep these SECRET
# These MUST be identical for both services
# Get these from Azure Portal > App Registrations

# Shared values (both services use the same Azure AD app)
# Server-side values
AZURE_TENANT_ID=your-tenant-id-here
AZURE_CLIENT_ID=your-client-id-here
AZURE_CLIENT_SECRET=your-client-secret-here
# Client-side values
NEXT_PUBLIC_AZURE_TENANT_ID=your-tenant-id-here
NEXT_PUBLIC_AZURE_CLIENT_ID=your-client-id-here

# Backend also needs these with MCP_PORTAL_ prefix
# (These will be set automatically by the wrapper script)
MCP_PORTAL_AZURE_TENANT_ID=your-tenant-id-here
MCP_PORTAL_AZURE_CLIENT_ID=your-client-id-here
MCP_PORTAL_AZURE_CLIENT_SECRET=your-client-secret-here

# ----------------------------------------
# JWT Security Configuration
# ----------------------------------------
# CRITICAL: This MUST be the same for both services!
# Generate with: openssl rand -base64 64

# Shared JWT secret (minimum 32 characters)
JWT_SECRET=your-jwt-secret-minimum-32-characters-change-in-production

# Backend needs this with different name
MCP_PORTAL_SECURITY_JWT_SIGNING_KEY=your-jwt-secret-minimum-32-characters-change-in-production

# ----------------------------------------
# API Port Configuration
# ----------------------------------------
# Backend server port - Frontend URLs must match this

# Define the port once
API_PORT=8080

# Backend uses this
MCP_PORTAL_SERVER_PORT=${API_PORT}
MCP_PORTAL_SERVER_HOST=0.0.0.0

# Frontend constructs URLs from it
# Backend Go service URL (Portal CLI subcommand)
NEXT_PUBLIC_API_URL=http://localhost:8080
# WebSocket URL for real-time updates
NEXT_PUBLIC_WS_URL=ws://localhost:8080

# ========================================
# FRONTEND-SPECIFIC CONFIGURATION
# ========================================

# ----------------------------------------
# Azure AD Public Configuration (Browser-safe)
# ----------------------------------------
# These are safe to expose to the browser
# Azure AD redirect URI (should match your app registration)
NEXT_PUBLIC_AZURE_REDIRECT_URI=http://localhost:3000/auth/callback
# Azure AD post-logout redirect URI
NEXT_PUBLIC_AZURE_POST_LOGOUT_URI=http://localhost:3000
# Azure AD authority URL (optional - constructed from tenant ID on server if not provided)
NEXT_PUBLIC_AZURE_AUTHORITY=https://login.microsoftonline.com/your-tenant-id-here
# Azure AD scopes (space-separated)
NEXT_PUBLIC_AZURE_SCOPES="openid profile email User.Read"

# ----------------------------------------
# Frontend Development Settings
# ----------------------------------------
# Enable debug logging
NEXT_PUBLIC_DEBUG=false
# API request timeout in milliseconds
NEXT_PUBLIC_API_TIMEOUT=30000
# WebSocket reconnection interval in milliseconds
NEXT_PUBLIC_WS_RECONNECT_INTERVAL=5000
# Frontend log level (DEBUG, INFO, WARN, ERROR, NONE)
NEXT_PUBLIC_LOG_LEVEL=INFO

# ----------------------------------------
# Frontend Feature Flags
# ----------------------------------------
# Enable real-time updates via WebSocket
NEXT_PUBLIC_ENABLE_WEBSOCKET=true
# Enable real-time updates via Server-Sent Events
NEXT_PUBLIC_ENABLE_SSE=true
# Enable admin features
NEXT_PUBLIC_ENABLE_ADMIN=true
# Enable bulk operations
NEXT_PUBLIC_ENABLE_BULK_OPS=true
# Enable configuration management
NEXT_PUBLIC_ENABLE_CONFIG_MGMT=true

# ----------------------------------------
# Frontend Security Settings
# ----------------------------------------
# JWT token storage (localStorage, sessionStorage, memory)
NEXT_PUBLIC_TOKEN_STORAGE=localStorage
# Session timeout in minutes
NEXT_PUBLIC_SESSION_TIMEOUT=60
# Enable CSRF protection
NEXT_PUBLIC_ENABLE_CSRF=true

# ----------------------------------------
# Frontend UI Configuration
# ----------------------------------------
# Default theme (light, dark, system)
NEXT_PUBLIC_DEFAULT_THEME=system
# Page size for server listings
NEXT_PUBLIC_DEFAULT_PAGE_SIZE=20
# Refresh interval for server status (seconds)
NEXT_PUBLIC_STATUS_REFRESH_INTERVAL=10

# ========================================
# BACKEND-SPECIFIC CONFIGURATION
# ========================================

# ----------------------------------------
# Backend Environment
# ----------------------------------------
# Backend environment (development, production)
MCP_PORTAL_ENV=development
NODE_ENV=development

# ----------------------------------------
# Database Configuration
# ----------------------------------------
# PostgreSQL settings
DATABASE_URL=postgresql://portal:password@localhost:5432/mcp_portal
MCP_PORTAL_DATABASE_HOST=localhost
MCP_PORTAL_DATABASE_PORT=5432
MCP_PORTAL_DATABASE_DATABASE=mcp_portal
MCP_PORTAL_DATABASE_USERNAME=portal
MCP_PORTAL_DATABASE_PASSWORD=password
MCP_PORTAL_DATABASE_SSL_MODE=prefer
MCP_PORTAL_DATABASE_MAX_CONNECTIONS=20
MCP_PORTAL_DATABASE_MIN_CONNECTIONS=2

# ----------------------------------------
# Redis Configuration
# ----------------------------------------
# Cache and session storage
REDIS_URL=redis://localhost:6379
MCP_PORTAL_REDIS_ADDRS=localhost:6379
MCP_PORTAL_REDIS_PASSWORD=
MCP_PORTAL_REDIS_DB=0
MCP_PORTAL_REDIS_SESSION_TTL=24h

# ----------------------------------------
# Backend Security Settings
# ----------------------------------------
MCP_PORTAL_SECURITY_JWT_ISSUER=mcp-portal
MCP_PORTAL_SECURITY_JWT_AUDIENCE=mcp-portal
MCP_PORTAL_SECURITY_ACCESS_TOKEN_TTL=15m
MCP_PORTAL_SECURITY_REFRESH_TOKEN_TTL=7d
MCP_PORTAL_SECURITY_CSRF_TOKEN_TTL=24h
MCP_PORTAL_SECURITY_RATE_LIMIT_REQUESTS=100
MCP_PORTAL_SECURITY_RATE_LIMIT_WINDOW=1m

# ----------------------------------------
# Backend CORS Configuration
# ----------------------------------------
MCP_PORTAL_SECURITY_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001
MCP_PORTAL_SECURITY_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
MCP_PORTAL_SECURITY_ALLOWED_HEADERS=Content-Type,Authorization,X-CSRF-Token
MCP_PORTAL_SECURITY_CORS_MAX_AGE=86400

# ----------------------------------------
# Backend CLI Integration
# ----------------------------------------
MCP_PORTAL_CLI_BINARY_PATH=docker
MCP_PORTAL_CLI_WORKING_DIR=/tmp/mcp-portal
MCP_PORTAL_CLI_DOCKER_SOCKET=/var/run/docker.sock
MCP_PORTAL_CLI_COMMAND_TIMEOUT=5m
MCP_PORTAL_CLI_MAX_CONCURRENT=10
MCP_PORTAL_CLI_OUTPUT_BUFFER_SIZE=1048576
MCP_PORTAL_CLI_ENABLE_DEBUG=false

# ----------------------------------------
# Backend Server Configuration
# ----------------------------------------
MCP_PORTAL_SERVER_READ_TIMEOUT=30s
MCP_PORTAL_SERVER_WRITE_TIMEOUT=30s
MCP_PORTAL_SERVER_SHUTDOWN_TIMEOUT=10s
MCP_PORTAL_SERVER_MAX_HEADER_BYTES=1048576
MCP_PORTAL_SERVER_TLS_ENABLED=false
# MCP_PORTAL_SERVER_TLS_CERT_FILE=/path/to/cert.pem
# MCP_PORTAL_SERVER_TLS_KEY_FILE=/path/to/key.pem

# ========================================
# SESSION CONFIGURATION (Frontend server-side)
# ========================================

# ----------------------------------------
# Session Cookie Settings
# ----------------------------------------
SESSION_COOKIE_NAME=mcp-portal-session
SESSION_COOKIE_SECURE=false  # Set to true in production with HTTPS
SESSION_COOKIE_HTTPONLY=true
SESSION_COOKIE_SAMESITE=lax

# ========================================
# OPTIONAL SERVICES
# ========================================

# ----------------------------------------
# Error Reporting (Optional)
# ----------------------------------------
# Sentry DSN for error tracking
# NEXT_PUBLIC_SENTRY_DSN=your-sentry-dsn-here
# Enable error reporting
# NEXT_PUBLIC_ENABLE_ERROR_REPORTING=false

# ----------------------------------------
# Build Configuration (Optional)
# ----------------------------------------
# Skip environment validation during build (use with caution)
# SKIP_ENV_VALIDATION=true
# Enable bundle analyzer
# ANALYZE=true

# =================================================================
# USAGE INSTRUCTIONS
# =================================================================
#
# 1. Copy this file to .env.local
# 2. Update all placeholder values with your actual configuration
# 3. Generate JWT secret: openssl rand -base64 64
# 4. Get Azure AD values from Azure Portal
# 5. Ensure API_PORT matches between frontend and backend
#
# To start services:
#   Frontend: npm run dev (reads .env.local directly)
#   Backend: Use start script that sources .env.local first
#
# =================================================================